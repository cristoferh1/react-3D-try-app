/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/west.glb 
Author: libblekibble (https://sketchfab.com/libblekibble)
License: SKETCHFAB Standard (https://sketchfab.com/licenses)
Source: https://sketchfab.com/3d-models/western-diorama-low-poly-0824a6a99b71436da5ea75b2313f73ea
Title: Western Diorama - Low Poly
*/
import React, { useLayoutEffect, useRef, useState } from "react";
import { ScrollTrigger } from "gsap/ScrollTrigger";
import { useGLTF } from "@react-three/drei";
import { useScroll } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import gsap from "gsap";

gsap.registerPlugin(ScrollTrigger);

export function West({ onFaceChange, ...props }) {
  const { nodes, materials } = useGLTF("models/west.glb");

  const ref = useRef();
  const tl = useRef();
  const scroll = useScroll();
  const currentFaceIndexTracker = { value: -1 };
  const faceThresholds = [0, Math.PI / 2, Math.PI, (3 * Math.PI) / 2];

  useFrame(() => {
    tl.current.seek(scroll.offset * tl.current.duration());
    const currentRotationY = ref.current.rotation.y;
    let normalizedRotation = currentRotationY % (Math.PI * 2);
    if (normalizedRotation < 0) {
      normalizedRotation += Math.PI * 2;
    }
    const tolerance = 0.05;
    faceThresholds.forEach((threshold, index) => {
      if (
        normalizedRotation >= threshold - tolerance &&
        normalizedRotation <= threshold + tolerance &&
        currentFaceIndexTracker.value !== index
      ) {
        currentFaceIndexTracker.value = index;
        if (onFaceChange) {
          onFaceChange(index + 1);
        }
        console.log(`Cara: ${index + 1}`);
      }
    });
  });

  useLayoutEffect(() => {
    tl.current = gsap.timeline({
      ease: "none",
    });

    const numberOfFaces = 4;
    const totalRotation = Math.PI * 1.6;
    tl.current.to(ref.current.rotation, {
      duration: numberOfFaces,
      y: totalRotation,
    });
    ScrollTrigger.create({
      trigger: "body",
      start: "top top",
      end: `+=${window.innerHeight * (numberOfFaces + 1)}`,
    });
  }, []);

  return (
    <group {...props} dispose={null} ref={ref}>
      <group scale={0.003} rotation={[0, -0.8, 0]}>
        <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
          <mesh
            geometry={nodes.Plane001_building_tan001_0.geometry}
            material={materials["building_tan.001"]}
          />
          <mesh
            geometry={nodes.Plane001_Material001_0.geometry}
            material={materials["Material.001"]}
          />
        </group>
        <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
          <mesh
            geometry={nodes.Plane002_Material007_0.geometry}
            material={materials["Material.007"]}
          />
          <mesh
            geometry={nodes.Plane002_Material002_0.geometry}
            material={materials["Material.002"]}
          />
          <mesh
            geometry={nodes.Plane002_wood_dark_0.geometry}
            material={materials.wood_dark}
          />
          <mesh
            geometry={nodes.Plane002_building_brown_0.geometry}
            material={materials.building_brown}
          />
        </group>
        <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
          <mesh
            geometry={nodes.Cube005_wood_dark_0.geometry}
            material={materials.wood_dark}
          />
          <mesh
            geometry={nodes.Cube005_building_yellow_0.geometry}
            material={materials.building_yellow}
          />
          <mesh
            geometry={nodes.Cube005_Material002_0.geometry}
            material={materials["Material.002"]}
          />
          <mesh
            geometry={nodes.Cube005_window_emission_0.geometry}
            material={materials.window_emission}
          />
        </group>
        <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
          <mesh
            geometry={nodes.Plane006_church_main_0.geometry}
            material={materials.church_main}
          />
          <mesh
            geometry={nodes.Plane006_wood_dark_0.geometry}
            material={materials.wood_dark}
          />
          <mesh
            geometry={nodes.Plane006_window_emission_0.geometry}
            material={materials.window_emission}
          />
        </group>
        <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
          <mesh
            geometry={nodes.Cube006_building_tan_0.geometry}
            material={materials.building_tan}
          />
          <mesh
            geometry={nodes.Cube006_building_brown_0.geometry}
            material={materials.building_brown}
          />
          <mesh
            geometry={nodes.Cube006_Material002_0.geometry}
            material={materials["Material.002"]}
          />
        </group>
        <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
          <mesh
            geometry={nodes.Plane013_building_brown_0.geometry}
            material={materials.building_brown}
          />
          <mesh
            geometry={nodes.Plane013_church_main_0.geometry}
            material={materials.church_main}
          />
        </group>
        <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
          <mesh
            geometry={nodes.Plane014_building_brown_0.geometry}
            material={materials.building_brown}
          />
          <mesh
            geometry={nodes.Plane014_church_main_0.geometry}
            material={materials.church_main}
          />
        </group>
        <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
          <mesh
            geometry={nodes.Circle003_Material_0.geometry}
            material={materials.Material}
          />
          <mesh
            geometry={nodes.Circle003_Material002_0.geometry}
            material={materials["Material.002"]}
          />
          <mesh
            geometry={nodes.Circle003_church_main_0.geometry}
            material={materials.church_main}
          />
        </group>
        <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
          <mesh
            geometry={nodes.Circle004_Material_0.geometry}
            material={materials.Material}
          />
          <mesh
            geometry={nodes.Circle004_Material002_0.geometry}
            material={materials["Material.002"]}
          />
          <mesh
            geometry={nodes.Circle004_church_main_0.geometry}
            material={materials.church_main}
          />
        </group>
        <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
          <mesh
            geometry={nodes.Plane024_building_brown_0.geometry}
            material={materials.building_brown}
          />
          <mesh
            geometry={nodes.Plane024_church_main_0.geometry}
            material={materials.church_main}
          />
        </group>
        <mesh
          geometry={nodes.Plane007_wood_dark_0.geometry}
          material={materials.wood_dark}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          geometry={nodes.Circle001_building_brown_0.geometry}
          material={materials.building_brown}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          geometry={nodes.Icosphere003_building_tan001_0.geometry}
          material={materials["building_tan.001"]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          geometry={nodes.Icosphere002_building_tan001_0.geometry}
          material={materials["building_tan.001"]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          geometry={nodes.Icosphere001_building_tan001_0.geometry}
          material={materials["building_tan.001"]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          geometry={nodes.Icosphere004_building_tan001_0.geometry}
          material={materials["building_tan.001"]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          geometry={nodes.Icosphere005_building_tan001_0.geometry}
          material={materials["building_tan.001"]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          geometry={nodes.Plane016_PLANT_0.geometry}
          material={materials.PLANT}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          geometry={nodes.Plane008_PLANT_0.geometry}
          material={materials.PLANT}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          geometry={nodes.Icosphere006_building_tan001_0.geometry}
          material={materials["building_tan.001"]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          geometry={nodes.Plane017_PLANT_0.geometry}
          material={materials.PLANT}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          geometry={nodes.Plane020_PLANT_0.geometry}
          material={materials.PLANT}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          geometry={nodes.Plane022_PLANT_0.geometry}
          material={materials.PLANT}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          geometry={nodes.Plane023_PLANT_0.geometry}
          material={materials.PLANT}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          geometry={nodes.Icosphere007_building_tan001_0.geometry}
          material={materials["building_tan.001"]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          geometry={nodes.Icosphere008_building_tan001_0.geometry}
          material={materials["building_tan.001"]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          geometry={nodes.Icosphere009_building_tan001_0.geometry}
          material={materials["building_tan.001"]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          geometry={nodes.Icosphere010_building_tan001_0.geometry}
          material={materials["building_tan.001"]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          geometry={nodes.Icosphere011_building_tan001_0.geometry}
          material={materials["building_tan.001"]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          geometry={nodes.Circle005_building_brown_0.geometry}
          material={materials.building_brown}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          geometry={nodes.Icosphere012_building_tan001_0.geometry}
          material={materials["building_tan.001"]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          geometry={nodes.Icosphere013_building_tan001_0.geometry}
          material={materials["building_tan.001"]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          geometry={nodes.Icosphere014_building_tan001_0.geometry}
          material={materials["building_tan.001"]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          geometry={nodes.Icosphere015_building_tan001_0.geometry}
          material={materials["building_tan.001"]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          geometry={nodes.Icosphere016_building_tan001_0.geometry}
          material={materials["building_tan.001"]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          geometry={nodes.Icosphere017_building_tan001_0.geometry}
          material={materials["building_tan.001"]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          geometry={nodes.Icosphere018_building_tan001_0.geometry}
          material={materials["building_tan.001"]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
      </group>
    </group>
  );
}

useGLTF.preload("models/west.glb");
